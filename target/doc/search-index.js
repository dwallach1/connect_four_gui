var searchIndex = {};
searchIndex["connect_four_gui"] = {"doc":"","items":[[0,"gui","connect_four_gui","Connect-K Client Side GUI Builds the Client Side GUI of the ConnectK class.",null,null],[4,"Player","connect_four_gui::gui","",null,null],[13,"One","","",0,null],[13,"Two","","",0,null],[5,"poll_server","","Sends requests to game server for specified game to determine whether opposing player has made a move. # Examples ``` let game_id = 0; let ip_address = \"127.0.0.1:8080\"; // 3x3 empty board = \"000000000\" if poll_server(game_id, &ip_address, board) {    // other player has completed their turn, respond accordingly    } ```",null,{"inputs":[{"name":"usize"},{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[5,"play_move","","Plays the move specified by user. Returns the board (string) of the updated board. # Examples ``` //3x3 empty board = \"000000000\" let new_board = play_move(0, CURRENT_GAME_ID, 127.0.0.1:8080); //board = \"100000000\" ```",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"str"}],"output":{"name":"string"}}],[5,"get_game","","Gets game info from game server for specified game_id. # Examples ``` let ip_address = \"127.0.0.1:8080\"; let game_id = \"0\"; let game_info_req = get_game(&game_id, &ip_address); //get resulting JSON if let Some(game_info) = game_info_req {  let game_value: Value = from_reader(game_info).expect(\"Unable to parse response!\"); } ```",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"update_board_gui","","Updates the board GUI based on current board state.",null,{"inputs":[{"name":"usize"},{"name":"str"},{"name":"grid"},{"name":"vec"}],"output":null}],[5,"build_selection_game_window","","Builds the parts of the GUI that allows user to select a game and create a game. Only games that can be joined are displayed.",null,{"inputs":[{"name":"vec"},{"name":"string"}],"output":null}],[5,"build_game_window","","Builds game window with ConnectK board and play game button.",null,{"inputs":[{"name":"str"},{"name":"player"},{"name":"string"}],"output":null}],[5,"connect_to_server","","Connects to game server to get information about current, joinable games. # Examples ``` let ip_address = \"127.0.0.1:8080\"; if let Some(game_ids) = connect_to_server(&ip_address) {    // succesfully connected to server  // use game_ids accordingly } ```",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"launch","","Launches game GUI.",null,{"inputs":[],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"player"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"player"}],"output":{"name":"bool"}}]],"paths":[[4,"Player"]]};
initSearch(searchIndex);
